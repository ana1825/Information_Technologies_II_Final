@using X.PagedList.Mvc.Core;
@model X.PagedList.IPagedList<DAL.Entities.Organization>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

@using (Html.BeginForm("Index", "Organizations", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Activities)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Activities)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.OrganizationId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.OrganizationId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.OrganizationId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, currentFilter = ViewBag.CurrentFilter }),
    new X.PagedList.Web.Common.PagedListRenderOptionsBase
    {
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] { "page-link" }
    })
